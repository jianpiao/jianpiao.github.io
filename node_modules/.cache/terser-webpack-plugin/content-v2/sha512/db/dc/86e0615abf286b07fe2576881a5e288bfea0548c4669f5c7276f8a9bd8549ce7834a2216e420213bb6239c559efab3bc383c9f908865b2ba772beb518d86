{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{338:function(n,t,s){\"use strict\";s.r(t);var e=s(33),a=Object(e.a)({},(function(){var n=this.$createElement,t=this._self._c||n;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":this.$parent.slotKey}},[t(\"h1\",{attrs:{id:\"_4月24号上课内容\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4月24号上课内容\"}},[this._v(\"#\")]),this._v(\" 4月24号上课内容\")]),this._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[this._v(\"read 命令：\\n键盘输入内容\\n-p 提示语句\\n-a 后跟一个变量，该变量会被认为是数组\\n-n 后跟一个数字 定义输入文本长度\\n-s 在屏幕输入不显示\\n$REPLY 临时存放最近一次没有指定变量的内容\\n \\nif语句：\\nif 和fi必须成对出现\\n格式：\\nif 测试条件\\nthen 命令1\\nelse 命令2\\nfi\\n判定方法：\\nif test 条件\\nif [ 测试条件 ]\\nif [[ 测试条件 ]]\\n \\ntest的用法：\\nif test  #表达式为真\\nif test ! #表达式为假\\ntest 表达式1 –a 表达式2  #两个表达式都为真\\ntest 表达式1 –o 表达式2  #两个表达式有一个为真\\ntest 表达式1 ! 表达式2  #条件求反\\n \\n-b<文件>：如果文件为一个块特殊文件，则为真；\\n-c<文件>：如果文件为一个字符特殊文件，则为真；\\n-d<文件>：如果文件为一个目录，则为真；\\n-e<文件>：如果文件存在，则为真；\\n-f<文件>：如果文件为一个普通文件，则为真；\\n-g<文件>：如果设置了文件的SGID位，则为真；\\n-G<文件>：如果文件存在且归该组所有，则为真；\\n-k<文件>：如果设置了文件的粘着位，则为真；\\n-O<文件>：如果文件存在并且归该用户所有，则为真；\\n-p<文件>：如果文件为一个命名管道，则为真；\\n-r<文件>：如果文件可读，则为真；\\n-s<文件>：如果文件的长度不为零，则为真；\\n-S<文件>：如果文件为一个套接字特殊文件，则为真；\\n-u<文件>：如果设置了文件的SUID位，则为真；\\n-w<文件>：如果文件可写，则为真；\\n-x<文件>：如果文件可执行，则为真。\\n \\n多行注释：\\n1. 首先按esc进入命令行模式下，按下Ctrl + v，进入列（也叫区块）模式;\\n2. 在行首使用上下键选择需要注释的多行;\\n3. 按下键盘（大写）“I”键，进入插入模式；\\n4. 然后输入注释符（“//”、“#”等）;\\n5. 最后按下“Esc”键。\\n注：在按下esc键后，会稍等一会才会出现注释，不要着急~~时间很短的\\n \\n删除多行注释：\\n1. 首先按esc进入命令行模式下，按下Ctrl + v, 进入列模式;\\n2. 选定要取消注释的多行;\\n3. 按下“x”或者“d”.\\n注意：如果是“//”注释，那需要执行两次该操作，如果是“#”注释，一次即可\\n \\n长格式 ll 或 ls -l\\n\")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);","extractedComments":[]}